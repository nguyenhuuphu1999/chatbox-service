version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: chat-mongodb
    restart: unless-stopped
    env_file:
      - ./.env.production
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  chat-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-socket-app
    restart: unless-stopped
    env_file:
      - ./.env.production
    ports:
      - "3000:3000"
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/socket.io/?EIO=4&transport=polling', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  uploads_data:
    driver: local

networks:
  chat-network:
    driver: bridge

import { Prop, Schema } from '@nestjs/mongoose';
import * as moment from 'moment';
import mongoose from 'mongoose';
import { IBase } from '../interfaces/base.interface';

@Schema({ timestamps: true })
export class BaseEntity implements IBase {
    @Prop({
        type: Date,
        default: Date.now,
        get: (value: Date) => {
            // Convert UTC to UTC+7 when retrieving
            return moment(value).utcOffset('+07:00').toDate();
        },
        set: (value: Date) => {
            // Convert UTC+7 to UTC when saving
            return moment(value).utcOffset('+07:00').toDate();
        }
    })
    public createdAt?: Date; // Auto-generated by Mongoose

    @Prop({
        type: Date,
        default: Date.now,
        get: (value: Date) => {
            // Convert UTC to UTC+7 when retrieving
            return moment(value).utcOffset('+07:00').toDate();
        },
        set: (value: Date) => {
            // Convert UTC+7 to UTC when saving
            return moment(value).utcOffset('+07:00').toDate();
        }
    })
    public updatedAt?: Date; // Auto-updated by Mongoose

    @Prop({
        default: null,
        type: Date
    })
    public deletedAt?: Date;


    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'UserEntity', nullable: true, default: null })
    public createdById?: string;

    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'UserEntity', nullable: true, default: null })
    public updatedById?: string;

    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'UserEntity', nullable: true, default: null })
    public deletedById?: string;
}

